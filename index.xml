<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dacarab&#39;s blog</title>
    <link>https://dacarab.github.io/</link>
    <description>Recent content on dacarab&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 15 Feb 2021 14:14:38 +0000</lastBuildDate><atom:link href="https://dacarab.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Extracting Data From a PDF Report</title>
      <link>https://dacarab.github.io/posts/2021/02/extracting-data-from-a-pdf-report/</link>
      <pubDate>Mon, 15 Feb 2021 14:14:38 +0000</pubDate>
      
      <guid>https://dacarab.github.io/posts/2021/02/extracting-data-from-a-pdf-report/</guid>
      <description>&lt;p&gt;There are often times when you are provided information in a report format that you need to do something with. For example, you may receive a regular report from your internal Security team that lists a set of missing patches or security vulnerabilities across your server estate, and you need to action the items listed. These reports are often produced in PDF format.&lt;/p&gt;
&lt;p&gt;Trying to manually pull information out of a report like this and turn it into a useable structure can be tedious and error prone - so having the ability to extract and structure the relevant information from the report, and use one or more scripts to then do something with it, can be very handy.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configuring Packer to Use an Answer File</title>
      <link>https://dacarab.github.io/posts/2021/02/configuring-packer-to-use-an-answer-file/</link>
      <pubDate>Fri, 12 Feb 2021 10:53:28 +0000</pubDate>
      
      <guid>https://dacarab.github.io/posts/2021/02/configuring-packer-to-use-an-answer-file/</guid>
      <description>In Part 10 of this series, we walked through the additional configuration that needs to be added to the sample Windows answer file that we have been extending, in order to enable setup to install the Paravirtual storage driver.
We are stepping away from the answer file now, to add some of the final touches to our Packer template file. Now that we have a Windows answer file in place, we can reference it from Packer, as well as set the WinRM credentials that will be needed to automate the build of our Windows 2019 vSphere template.</description>
    </item>
    
    <item>
      <title>Configuring Driver Paths within the Windows Answer File</title>
      <link>https://dacarab.github.io/posts/2021/02/configuring-driver-paths-within-the-windows-answer-file/</link>
      <pubDate>Fri, 05 Feb 2021 10:09:41 +0000</pubDate>
      
      <guid>https://dacarab.github.io/posts/2021/02/configuring-driver-paths-within-the-windows-answer-file/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://dacarab.github.io/posts/2021/02/defining-the-windows-edition-to-install/&#34;&gt;Last time&lt;/a&gt;, we looked at how to go about choosing the appropriate Windows edition image from within the WIM image on the installation media, and defining this in the answer file that we are working with.&lt;/p&gt;
&lt;p&gt;In this article, we finish off our answer file configuration by adding the necessary settings to point to the locations of the Paravirtual Storage and network drivers that will be required by Windows setup.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Defining the Windows Edition to Install</title>
      <link>https://dacarab.github.io/posts/2021/02/defining-the-windows-edition-to-install/</link>
      <pubDate>Tue, 02 Feb 2021 12:16:58 +0000</pubDate>
      
      <guid>https://dacarab.github.io/posts/2021/02/defining-the-windows-edition-to-install/</guid>
      <description>Previously, we covered adding additional configuration to our Windows answer file that defined the Administrator password, auto logon and time zone settings on our template VM.
In this article, we continue to build out our answer file by covering how to identify the necessary information from the Windows installation media to select the edition of Windows that we want to install, and then adding this info to the appropriate section of the Windows answer file.</description>
    </item>
    
    <item>
      <title>Configuring the Administrator Password, Auto Logon and Time Zone</title>
      <link>https://dacarab.github.io/posts/2021/01/configuring-the-administrator-password-auto-logon-and-time-zone/</link>
      <pubDate>Fri, 29 Jan 2021 08:28:40 +0000</pubDate>
      
      <guid>https://dacarab.github.io/posts/2021/01/configuring-the-administrator-password-auto-logon-and-time-zone/</guid>
      <description>&lt;p&gt;In the &lt;a href=&#34;https://dacarab.github.io/posts/2021/01/configuring-a-windows-answer-file-for-use-with-packer/&#34;&gt;last article&lt;/a&gt; in this series, we covered the answer file configuration and security considerations for configuring the WinRM service on the Windows template machine that we are automating through the use of Packer.&lt;/p&gt;
&lt;p&gt;In this article, we will look at configuring the answer file to set the Administrator password and the time zone during the initial setup of the windows template VM.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configuring a Windows Answer File for use with Packer</title>
      <link>https://dacarab.github.io/posts/2021/01/configuring-a-windows-answer-file-for-use-with-packer/</link>
      <pubDate>Thu, 28 Jan 2021 17:08:27 +0000</pubDate>
      
      <guid>https://dacarab.github.io/posts/2021/01/configuring-a-windows-answer-file-for-use-with-packer/</guid>
      <description>In the previous article we discussed the high level changes that we need to make to the sample answer file that comes with the Windows Server installation media, with a view to tailoring it for use with the Packer template file that we are working on.
In this article, we&amp;rsquo;re going to start to add that configuration by making the necessary changes to the FirstLogonCommands section of the answer file.</description>
    </item>
    
    <item>
      <title>Creating a Windows Answer File for Use With Packer</title>
      <link>https://dacarab.github.io/posts/2021/01/creating-a-windows-answer-file-for-use-with-packer/</link>
      <pubDate>Wed, 27 Jan 2021 15:33:48 +0000</pubDate>
      
      <guid>https://dacarab.github.io/posts/2021/01/creating-a-windows-answer-file-for-use-with-packer/</guid>
      <description>In this article, we will cover the initial creation of a Windows answer file, which will be used as part of the Packer template file that we have been putting together in previous articles in this series. Future articles will discuss the additional configuration that will need to be added to this file as we tailor it to our requirements.
This answer file will automate the initial setup a Windows Server 2019 VM template in a vSphere 7 environment, which Packer will then customise to meet our needs.</description>
    </item>
    
    <item>
      <title>Provisioning Installation Files With Packer</title>
      <link>https://dacarab.github.io/posts/2021/01/provisioning-installation-files-with-packer/</link>
      <pubDate>Wed, 27 Jan 2021 15:25:34 +0000</pubDate>
      
      <guid>https://dacarab.github.io/posts/2021/01/provisioning-installation-files-with-packer/</guid>
      <description>In the previous article, we added the necessary configuration to our Packer template that defines the storage and network adapters that are presented to the VM template machine.
In this article, we will further expand on our Packer template by configuring the windows installation media as well as presenting the necessary drivers to Windows OS at install time. In a future article, we&amp;rsquo;ll cover off the configuration within the Windows answer file that is needed to point windows setup to the location of these driver files.</description>
    </item>
    
    <item>
      <title>Configuring our VM Template With Virtual Devices Using Packer</title>
      <link>https://dacarab.github.io/posts/2021/01/configuring-our-vm-template-with-virtual-devices-using-packer/</link>
      <pubDate>Wed, 27 Jan 2021 15:23:26 +0000</pubDate>
      
      <guid>https://dacarab.github.io/posts/2021/01/configuring-our-vm-template-with-virtual-devices-using-packer/</guid>
      <description>Previously, we started to look at adding OS agnostic virtual resources for the vSphere VM template to use.
Next, we&amp;rsquo;ll look at further expanding on the Packer template that we are building up by adding virtual devices that the operating system will interactive directly, and will thus require device drivers for.
Defining the template OS In order to be able to utilise the storage resources that we&amp;rsquo;ve defined, we need to define a virtual storage card - this will look like a piece of hardware to the template machine.</description>
    </item>
    
    <item>
      <title>Configuring VM Template Hardware With Packer</title>
      <link>https://dacarab.github.io/posts/2021/01/configuring-vm-template-hardware-with-packer/</link>
      <pubDate>Wed, 27 Jan 2021 15:20:19 +0000</pubDate>
      
      <guid>https://dacarab.github.io/posts/2021/01/configuring-vm-template-hardware-with-packer/</guid>
      <description>In Part 2 of this series, we discussed how to utilise the vsphere-iso Packer builder component in order to connect up to a vSphere 7 environment.
In this article, we will continue to expand on that template, and introduce configuration to define the virtual hardware to allocate to the template VM machine.
Adding additional vSphere settings To start with, we&amp;rsquo;ll create User Variables for the cluster, datacentre, datastore and vm folder that it will be deployed to, along with the relevant fields within the vsphere-iso builder:</description>
    </item>
    
    <item>
      <title>Connecting to VSphere With Packer</title>
      <link>https://dacarab.github.io/posts/2021/01/connecting-to-vsphere-with-packer/</link>
      <pubDate>Wed, 27 Jan 2021 15:17:00 +0000</pubDate>
      
      <guid>https://dacarab.github.io/posts/2021/01/connecting-to-vsphere-with-packer/</guid>
      <description>In the first article in this series, we had an initial look at Packer and the high level components that it employs to automate the creation of VM templates for various cloud and hypervisor platforms.
This time, we&amp;rsquo;ll start to look at some specific configuration to enable us to connect up to a vSphere 7 environment, with a view to automating the creation of a Windows Server 2019 VM template.</description>
    </item>
    
    <item>
      <title>Automating VSphere 7 VM Templates With Packer</title>
      <link>https://dacarab.github.io/posts/2021/01/automating-vsphere-7-vm-templates-with-packer/</link>
      <pubDate>Wed, 27 Jan 2021 15:09:46 +0000</pubDate>
      
      <guid>https://dacarab.github.io/posts/2021/01/automating-vsphere-7-vm-templates-with-packer/</guid>
      <description>&lt;p&gt;In this article, we&amp;rsquo;ll have an initial look at Packer, briefly discuss the high level components that make up Packer, and have a quick look at the format of an empty Packer Template.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://packer.io&#34;&gt;Packer&lt;/a&gt; is one of a number of automation tools created by HashiCorp. It is used to automate the creation of virtual machine templates, for use on one or more virtualisation or cloud platforms. These templates can then be used to provision server environments.
​​&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
